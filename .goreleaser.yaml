# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

before:
  hooks:
    - go mod tidy

builds:
  - main: ./cmd/sprout/
    id: "sprout"
    # example - grlx-sprout-linux-amd64
    binary: "{{.ProjectName}}-sprout-{{.Os}}-{{.Arch}}"
    goos:
      - linux
    goarch:
      - amd64
      - 386
      - arm64
      - arm
  - main: ./cmd/farmer/
    id: "farmer"
    # example - grlx-farmer-linux-amd64
    binary: "{{.ProjectName}}-farmer-{{.Os}}-{{.Arch}}"
    goos:
      - linux
    goarch:
      - amd64
      - 386
      - arm64
      - arm
  - main: ./cmd/grlx/
    id: "grlx-cli"
    # example - grlx-cli-linux-amd64
    binary: "{{.ProjectName}}-cli-{{.Os}}-{{.Arch}}"
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - 386
      - arm64
      - arm
    ldflags:
      - -X main.GitCommit={{.ShortCommit}} -X main.Tag=v{{.Version}}

# generates macOS universal binaries
# name would be: grlx-cli-darwin-universal
universal_binaries:
  - id: grlx-universal
    ids:
      - "grlx-cli"
    name_template: "{{.ProjectName}}-cli-darwin-universal"
    replace: true

# generates archives for the CLI
archives:
  - format: tar.gz
    allow_different_binary_count: true
    builds:
      - grlx-cli
      - grlx-universal
    name_template: "{{.ProjectName}}-cli-{{.Os}}-{{.Arch}}"
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  github:
    owner: gogrlx
    name: grlx
  ids:
    - grlx-universal
    - grlx-cli
    - farmer
    - sprout
  draft: true

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
